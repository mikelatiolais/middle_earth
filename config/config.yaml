#config_version=5

#Middle Earth Cobrapin Config

hardware:
  platform: opp
  driverboards: gen2


opp:
  #Use the USB ports defined by your OS for the two STM32 boards
  ports: /dev/ttyACM0, /dev/ttyACM1, /dev/ttyACM2
  #USING SERIAL NUMBERS INSTEAD OF CHAINS
  #  Board 0 has serial number 0, Board 1 has serial number 1.
  #  This is convenient if your OS tends to reassign the serial port.
  #  MPF will automatically address the correct board even if the ports
  #     are swapped.

  #For multiple CobraPin boards in a game, you will either have to give 
  #  the STM32 boards on the second CobraPin board new serial numbers 
  #  (10 and 11 are suggested for the 2nd board since 2 is used by the 
  #  CobraPin Xpansion Board) 
  #  <OR> Use the chains section to assign a port to a board number. 
  #  Mixing these up could cause blown FETs, coils, and fuses. Proceed 
  #  with caution. Test without coil power and use the yellow coil LEDs 
  #  for feedback.
  #chains:
     #0: /dev/ttyACM0
     #1: /dev/ttyACM1
     #3: /dev/ttyACM2


psus:
  default:
    #Gives the capacitors extra time to recharge after firing a coil
    #  and eases the load on the power supply. Doesn't affect autofire
    #  devices like flippers, pops, slings.
    release_wait_ms: 50   


#One giant config file can get difficult to manage. You can put any of 
#  these config sections in its own yaml file and link to it with the 
#  config section here      
config:
  - switches_config.yaml
  - coils_config.yaml
  - lamps_config.yaml

flippers:
  #Add your flipper config
  left_flipper:
    main_coil: c_flipper_left
    activation_switch: s_left_flipper
    enable_events: machine_reset_phase_3 
  right_flipper:
    main_coil: c_flipper_right
    activation_switch: s_right_flipper
    enable_events: machine_reset_phase_3

ball_devices:
  bd_drain:
    ball_switches: s_outhole_kicker
    eject_coil: c_ball_eject
    tags: drain, home, trough
    eject_timeouts: 3s
    debug: true

playfields:
  playfield:
    default_source_device: bd_drain
    tags: default

machine:
  balls_installed: 1 #How many balls are physically in your game
  min_balls: 0 #How few balls can be accounted for before you can start a game


game:
  balls_per_game: 3
  max_players: 4


modes:
  #Add all your mode names here
  - attract
  - base
  #- etc


drop_targets:
  l_first:
    switch: s_lower_drop_1
  l_second:
    switch: s_lower_drop_2
  l_third:
    switch: s_lower_drop_3
  l_fourth:
    switch: s_lower_drop_4
  l_fifth:
    switch: s_lower_drop_5
  u_first:
    switch: s_upper_drop_1
  u_second:
    switch: s_upper_drop_2
  u_third:
    switch: s_upper_drop_3
  u_fourth:
    switch: s_upper_drop_4
  u_fifth:
    switch: s_upper_drop_5
drop_target_banks:
  upper_bank:
    drop_targets: u_first, u_second, u_third, u_fourth, u_fifth
    reset_coils: c_right_drop_reset
    reset_on_complete: 1s
  lower_bank:
    drop_targets: l_first, l_second, l_third, l_fourth, l_fifth
    reset_coils: c_left_drop_reset
    reset_on_complete: 1s


keyboard:   #use to drive your game from the computer for testing
  s:
    switch: s_start_button
  w:
    switch: s_10_pt
  o:
    switch: s_outhole_kicker
  l:
    switch: s_left_flipper
  r:
    switch: s_right_flipper
  #"/":
  #  switch: s_right_eos

displays:
  window:
    width: 800
    height: 600

#slides:
  #welcome_slide:
    #widgets:
    #  - type: text
    #    text: PINBALL!!

#slide_player:
#  init_done: welcome_slide
#  ball_started:
#    widgets:
#      type: text
#      text: PLAYER (number) BALL (ball)
sound_system:
  tracks:
    voice:
      volume: 1
      priority: 2
      simultaneous_sounds: 1
      preload: true
    sfx:
      volume: 1
      priority: 1
      preload: true
      simultaneous_sounds: 7
    music:
      volume: 0.5
      simultaneous_sounds: 1

assets:
  sounds:
    default:
      load: on_demand
    music:
      track: music
    sfx:
      track: sfx
    voice:
      track: voice
